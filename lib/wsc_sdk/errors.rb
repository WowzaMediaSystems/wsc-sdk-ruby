####> This code and all components © 2015 – 2019 Wowza Media Systems, LLC. All rights reserved.
####> This code is licensed pursuant to the BSD 3-Clause License.

module WscSdk
  # Enumerate the errors that can be generated by the SDK
  #
  module Errors
    # Error returned when the model does not validate.
    #
    INVALID_ATTRIBUTES    = {
      meta: {
        status:       422,
        code:         "ERR-422-InvalidAttributes",
        title:        "Invalid Attributes",
        message:      "The model has invalid attribute values assigned to it.  Check the `WscSdk::Model#errors` property for more details.",
        description:  ""
      }
    }

    # Error returned if the data returned from the API is not valid JSON.
    #
    INVALID_PAYLOAD  = {
      meta: {
        status:       422,
        code:         "ERR-422-PayloadInvalid",
        title:        "Payload Invalid",
        message:      "The API request received an invalid payload.",
        description:  "Turn on logging in DEBUG mode for more details about the issue."
      }
    }

    # Error returned when the model is attempting an update, but it doesn't
    # have a primary key.
    #
    MODEL_DOES_NOT_EXIST  = {
      meta: {
        status:       422,
        code:         "ERR-422-ModelDoesNotExist",
        title:        "Model Does Not Exist",
        message:      "You are attempting to access or update a record that does not exist yet. Try creating it first.",
        description:  ""
      }
    }

    # Error returned when the model is attempting to create, but it already
    # has a primary key.
    #
    MODEL_EXISTS  = {
      meta: {
        status:       422,
        code:         "ERR-422-ModelExists",
        title:        "Model Exists",
        message:      "You are attempting to create a record that already exists. Try updating the it.",
        description:  ""
      }
    }

    # Build an INVALID_ATTRIBUTES error model object.
    #
    # @param endpoint [WscSdk::Endpoint]
    #   The endpoint that is building the error.
    #
    # @return [WscSdk::Models::Error]
    #   The newly built error object.
    #
    def self.invalid_attributes(endpoint)
      error = WscSdk::Models::Error.new(endpoint)
      error.ingest_attributes(INVALID_ATTRIBUTES, write_to_read_only: true, mark_clean: true)
      error
    end

    # Build an INVALID_PAYLOAD error model object.
    #
    # @param endpoint [WscSdk::Endpoint]
    #   The endpoint that is building the error.
    #
    # @return [WscSdk::Models::Error]
    #   The newly built error object.
    #
    def self.invalid_payload(endpoint)
      error = WscSdk::Models::Error.new(endpoint)
      error.ingest_attributes(INVALID_PAYLOAD, write_to_read_only: true, mark_clean: true)
      error
    end

    # Build an RECORD_DOES_NOT_EXIST error model object.
    #
    # @param endpoint [WscSdk::Endpoint]
    #   The endpoint that is building the error.
    #
    # @return [WscSdk::Models::Error]
    #   The newly built error object.
    #
    def self.model_does_not_exist(endpoint)
      error = WscSdk::Models::Error.new(endpoint)
      error.ingest_attributes(MODEL_DOES_NOT_EXIST, write_to_read_only: true, mark_clean: true)
      error
    end

    # Build an RECORD_EXISTS error model object.
    #
    # @param endpoint [WscSdk::Endpoint]
    #   The endpoint that is building the error.
    #
    # @return [WscSdk::Models::Error]
    #   The newly built error object.
    #
    def self.model_exists(endpoint)
      error = WscSdk::Models::Error.new(endpoint)
      error.ingest_attributes(MODEL_EXISTS, write_to_read_only: true, mark_clean: true)
      error
    end

  end
end
